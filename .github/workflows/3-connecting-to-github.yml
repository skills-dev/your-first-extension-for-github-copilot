name: Step 3 # Connecting to GitHub

on:
  issue_comment:
    types: [created, edited]

permissions:
  contents: read
  actions: write
  issues: write

env:
  # Keywords required in the issue comment to allow this workflow to run
  REQUIRED_ISSUE_COMMENT_KEYWORDS: "@professortocat,https://github.com/apps"
  STEP_4_FILE: ".github/steps/4-customizing-our-extension.md"

jobs:
  required_issue_comment_keywords:
    name: Check issue comment text for required keywords
    runs-on: ubuntu-latest

    steps:
      - name: Stop early if missing the expected keywords
        run: |
          required_keywords=(${REQUIRED_ISSUE_COMMENT_KEYWORDS//,/ })
          for keyword in "${required_keywords[@]}"; do
          if [[ ! "$COMMENT_BODY" =~ $keyword ]]; then
            exit 1
          fi
          done
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}

  find_exercise:
    name: Find Exercise Issue
    uses: skills/exercise-toolkit/.github/workflows/find-exercise-issue.yml@v0.7.0

  check_step_work:
    name: Check step work
    runs-on: ubuntu-latest
    needs: [required_issue_comment_keywords, find_exercise]
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.7.0

      - name: Find last comment
        id: find-last-comment
        uses: peter-evans/find-comment@v3
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          direction: last

      - name: Update comment - checking work
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          comment-id: ${{ steps.find-last-comment.outputs.comment-id }}
          file: exercise-toolkit/markdown-templates/step-feedback/checking-work.md
          edit-mode: replace

      # START: Check practical exercise

      - name: Check gitub app url is valid
        id: check-app-url
        continue-on-error: true
        run: |
          # Get the GitHub App url from the comment body
          url_regex="https://github.com/apps/[^[:space:]]*"
          app_url=$(echo $ISSUE_COMMENT_BODY | grep -oP "$url_regex" | head -n 1)

          # Ping the url and get the content
          echo "Checking GitHub App exists at: $app_url"
          resp_code=$(curl -s -o /dev/null -w "%{http_code}" $app_url)
          echo "Response Code: $resp_code"

          # If the GitHub App url is not valid, it wasn't created. Comment on the issue and exit
          if [ "$resp_code" -eq 200 ]; then
            echo "GitHub App confirmed existing"
          else
            echo "GitHub App not available. Response Code: $resp_code"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_COMMENT_BODY: ${{ github.event.comment.body }}

      # END: Check practical exercise

      - name: Update comment - step results
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          comment-id: ${{ steps.find-last-comment.outputs.comment-id }}
          file: exercise-toolkit/markdown-templates/step-feedback/step-results-table.md
          edit-mode: replace
          vars: |
            step_number: 3
            results_table:
              - description: "GitHub App URL is valid"
                passed: ${{ steps.check-app-url.outcome == 'success' }}

      - name: Fail job if not all checks passed
        if: contains(steps.*.outcome, 'failure')
        run: exit 1

  post_next_step_content:
    name: Post next step content
    needs: [find_exercise, check_step_work]
    runs-on: ubuntu-latest
    env:
      ISSUE_REPOSITORY: ${{ github.repository }}
      ISSUE_NUMBER: ${{ needs.find_exercise.outputs.issue-number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get response templates
        uses: actions/checkout@v4
        with:
          repository: skills/exercise-toolkit
          path: exercise-toolkit
          ref: v0.7.0

      - name: Create lowercase version of login
        if: true
        run: |
          login_lowercase=$(echo "${{ github.actor }}" | tr '[:upper:]' '[:lower:]')
          echo "login_lowercase=$login_lowercase" >> $GITHUB_ENV

      - name: Build comment - add step content
        id: build-comment
        uses: skills/action-text-variables@v1
        with:
          template-file: ${{ env.STEP_4_FILE }}
          template-vars: |
            login_lowercase=${{ env.login_lowercase }}

      - name: Create comment - add step content
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: ${{ env.STEP_4_FILE }}

      - name: Create comment - watching for progress
        uses: GrantBirki/comment@v2.1.1
        with:
          repository: ${{ env.ISSUE_REPOSITORY }}
          issue-number: ${{ env.ISSUE_NUMBER }}
          file: exercise-toolkit/markdown-templates/step-feedback/watching-for-progress.md

      - name: Disable current workflow and enable next one
        run: |
          gh workflow disable "${{github.workflow}}"
          gh workflow enable "Step 4"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
